#!/bin/bash
#
# Install all the .symlink files

DOTFILES_ROOT="$(pwd)"

set -e

info () {
    printf "  [ \033[00;34m..\033[0m ] %s\n" "$1"
}

user () {
    printf "\r  [ \033[0;33m?\033[0m ] %s " "$1"
}

success () {
    printf "\r\033[2K  [ \033[00;32mOK\033[0m ] %s\n" "$1"
}

link_files () {
    ln -s "$1" "$2"
    success "linked $1 to $2"
}

install_dotfiles () {
    directory="$1"

    overwrite_all=false
    backup_all=false
    skip_all=false
    is_equal=false

    for source in `find "$DOTFILES_ROOT/$directory" -maxdepth 2 -name \*.symlink`
    do
        if [[ $(dirname ${source}) == *"dotconfig" ]]; then
            dest="$HOME/.config/`basename \"${source%.*}\"`"
            mkdir -p "$HOME/.config"
        else
            dest="$HOME/.`basename \"${source%.*}\"`"
        fi
        if [ -f $dest ] || [ -d $dest ]
        then
            is_equal=false
            overwrite=false
            backup=false
            skip=false
            if [[ $(readlink $dest) == $source ]]; then
                is_equal=true
                skip=true
            elif [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
            then
                user "File exists: $(basename $source), what do you want to do? [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
                read -n 1 action

                case "$action" in
                    o )
                        overwrite=true;;
                    O )
                        overwrite_all=true;;
                    b )
                        backup=true;;
                    B )
                        backup_all=true;;
                    s )
                        skip=true;;
                    S )
                        skip_all=true;;
                    * )
                        ;;
                esac
            fi

            if [ "$overwrite" == "true" ] || [ "$overwrite_all" == "true" ]
            then
                rm -rf $dest
                success "removed $dest"
            fi

            if [ "$backup" == "true" ] || [ "$backup_all" == "true" ]
            then
                mv $dest $dest\.backup
                success "moved $dest to $dest.backup"
            fi

            if [ "$skip" == "false" ] && [ "$skip_all" == "false" ]
            then
                link_files $source $dest
            elif [ "$is_equal" == "true" ]
            then
                success "already installed - $source"
            else
                success "skipped $source"
            fi

        else
            link_files $source $dest
        fi

    done
}

info "installing dotfiles - $1"
install_dotfiles "$1"
info 'Everything installed!'
